on:
  workflow_call:
    inputs:
      cache-key:
        required: true
        type: string
      cache-path:
        required: true
        type: string
      valid-cache:
        required: true
        type: boolean
      os:
        required: true
        type: string
      arch:
        required: false
        type: string
      build-deps-only:
        required: false
        type: boolean

jobs:
  build_deps:
    name: Build Deps
    if: inputs.build-deps-only || inputs.valid-cache != true
    runs-on: ${{ inputs.os }}
    env:
      date:
    steps:
      
      # Setup the environment
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: load cached deps
        uses: actions/cache@v3
        with:
          path: ${{ inputs.cache-path }}
          key: ${{ inputs.cache-key }}

      - name: setup dev on Windows
        if: inputs.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.1

      - name: Get the date on Windows
        if: inputs.os == 'windows-latest'
        run: echo "date=$(Get-Date -Format 'yyyyMMdd')" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8
        shell: pwsh

        
      # Build Dependencies
      - name: Build on Windows
        if: inputs.os == 'windows-latest'
        working-directory: ${{ github.workspace }}
        run: |
            choco install strawberryperl
            mkdir ${{ github.workspace }}/deps/build
            mkdir ${{ github.workspace }}/deps/build/OrcaSlicer_dep
            .\build_release_vs2022.bat deps
            .\build_release_vs2022.bat pack
            cd ${{ github.workspace }}/deps/build
      
            
      # Upload Artifacts
      - name: Upload Windows artifacts
        if: inputs.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: OrcaSlicer_dep_win64_${{ env.date }}
          path: ${{ github.workspace }}/deps/build/OrcaSlicer_dep*.zip

          
  build_orca:
    name: Build OrcaSlicer
    needs: [build_deps]
    if: ${{ !cancelled() && !inputs.build-deps-only && (inputs.valid-cache == true && needs.build_deps.result == 'skipped') || (inputs.valid-cache != true && success()) }}
    uses: ./.github/workflows/build_orca.yml
    with:
      cache-key: ${{ inputs.cache-key }}
      cache-path: ${{ inputs.cache-path }}
      os: ${{ inputs.os }}
      arch: ${{ inputs.arch }}
    secrets: inherit
        
